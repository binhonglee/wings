const HEADER*: string = """
# DO NOT MANUALLY EDIT THIS FILE
#
# This file is automatically generated based on the config files located in `examples/input/template/`.

from stones/cases import Case
import tables
import ../lib/tconfig

"""

const COMMENT_PRE*: string = "const COMMENT: string = \""
const COMMENT_POST*: string = "\""

const FILENAME*: string = "const FILENAME: Case = Case."
const FILETYPE_PRE*: string = "const FILETYPE: string = \""
const FILETYPE_POST*: string = "\""

const IMPLEMENT_FORMAT_PRE*: string = "const IMPLEMENT_FORMAT: string = \""
const IMPLEMENT_FORMAT_POST*: string = "\""

const IMPORT_PATH_FORMAT_PRE*: string = "const IMPORT_PATH_FORMAT: string = \""
const IMPORT_PATH_FORMAT_POST*: string = "\""

const IMPORT_PATH_TYPE*: string = "const IMPORT_PATH_TYPE: ImportPathType = ImportPathType."

const IMPORT_PATH_PREFIX_PRE*: string = "const IMPORT_PATH_PREFIX: string = \""
const IMPORT_PATH_PREFIX_POST*: string = "\""

const IMPORT_PATH_SEPARATOR_PRE*: string = "const IMPORT_PATH_SEPARATOR: char = '"
const IMPORT_PATH_SEPARATOR_POST*: string = "'"

const IMPORT_PATH_LEVEL*: string = "const IMPORT_PATH_LEVEL: int = "

const PRE_INDENT*: string = "const PRE_INDENT: bool = "

const INDENTATION_SPACING_PRE*: string = "const INDENTATION_SPACING: string = \""
const INDENTATION_SPACING_POST*: string = "\""

const INTERFACE_SUPPORTED*: string = "const INTERFACE_SUPPORTED: bool = "
const PARAM_FORMAT_PRE*: string = "const PARAM_FORMAT: string = \""
const PARAM_FORMAT_POST*: string = "\""

const PARAM_JOINER_PRE*: string = "const PARAM_JOINER: string = \""
const PARAM_JOINER_POST*: string = "\""

const PARSE_FORMAT_PRE*: string = "const PARSE_FORMAT: string = \""
const PARSE_FORMAT_POST*: string = "\""

const TEMPLATE_STRUCT_PRE*: string = "const TEMPLATE_STRUCT: string = \"\"\"\n"
const TEMPLATE_STRUCT_POST*: string = "\n\"\"\""
const TEMPLATE_ENUM_PRE*: string = "const TEMPLATE_ENUM: string = \"\"\"\n"
const TEMPLATE_ENUM_POST*: string = "\n\"\"\""
const TEMPLATE_INTERFACE_PRE*: string = "const TEMPLATE_INTERFACE: string = \"\"\"\n"
const TEMPLATE_INTERFACE_POST*: string = "\n\"\"\""
const TEMPLATE_LOGGER_PRE*: string = "const TEMPLATE_LOGGER: string = \"\"\"\n"
const TEMPLATE_LOGGER_POST*: string = "\n\"\"\""

const TYPES_PRE*: string = "let TYPES: Table[string, TypeInterpreter] = {"
const TYPES_POST*: string = "}.toTable()"
const CUSTOM_TYPES_PRE*: string = "let CUSTOM_TYPES: Table[string, CustomTypeInterpreter] = {"
const CUSTOM_TYPES_POST*: string = "}.toTable()"

const CONFIG_PRE*: string = "let "
const CONFIG_POST*: string = """_CONFIG*: TConfig = initTConfig(
  cmt = COMMENT,
  ct = CUSTOM_TYPES,
  c = FILENAME,
  ft = FILETYPE,
  ifmt = IMPLEMENT_FORMAT,
  ipfmt = IMPORT_PATH_FORMAT,
  ipt = IMPORT_PATH_TYPE,
  pfx = IMPORT_PATH_PREFIX,
  sep = IMPORT_PATH_SEPARATOR,
  level = IMPORT_PATH_LEVEL,
  isp = INDENTATION_SPACING,
  pi = PRE_INDENT,
  isup = INTERFACE_SUPPORTED,
  prmFmt = PARAM_FORMAT,
  prmJnr = PARAM_JOINER,
  pfmt = PARSE_FORMAT,
  temp = {
    "struct": TEMPLATE_STRUCT,
    "enum": TEMPLATE_ENUM,
    "interface": TEMPLATE_INTERFACE,
    "logger": TEMPLATE_LOGGER,
  }.toTable(),
  ty = TYPES,
)"""
